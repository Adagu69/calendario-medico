import pool from './connection';
import bcrypt from 'bcryptjs';

export const seedDatabase = async () => {
  const client = await pool.connect();

  try {
    console.log('üå± Seeding database...');

    // 1. Seed Sections
    console.log('Seeding sections...');
    const sectionsResult = await client.query(`
      INSERT INTO sgh_sections (name, description) VALUES
      ('Pediatr√≠a', 'Atenci√≥n m√©dica para beb√©s, ni√±os y adolescentes.'),
      ('Ginecolog√≠a y Obstetricia', 'Salud del sistema reproductivo femenino y atenci√≥n durante el embarazo.'),
      ('Medicina General', 'Atenci√≥n primaria y diagn√≥stico general para adultos.'),
      ('Cardiolog√≠a', 'Enfermedades del coraz√≥n y del sistema circulatorio.')
      RETURNING id, name;
    `);
    const sections: { [key: string]: number } = sectionsResult.rows.reduce((acc, row) => {
        acc[row.name] = row.id;
        return acc;
    }, {});
    console.log('‚úÖ Sections seeded.');

    // 2. Seed Specialties
    console.log('Seeding specialties...');
    const specialtiesResult = await client.query(`
      INSERT INTO sgh_specialties (name, description) VALUES
      ('Neumolog√≠a Pedi√°trica', 'Enfermedades respiratorias en ni√±os.'),
      ('Cardiolog√≠a Pedi√°trica', 'Problemas del coraz√≥n en ni√±os.'),
      ('Ginecolog√≠a Oncol√≥gica', 'C√°ncer del sistema reproductivo femenino.'),
      ('Medicina Fetal', 'Salud del feto durante el embarazo.'),
      ('Cardiolog√≠a Intervencionista', 'Procedimientos para tratar enfermedades card√≠acas estructurales.')
      RETURNING id, name;
    `);
    const specialties: { [key: string]: number } = specialtiesResult.rows.reduce((acc, row) => {
        acc[row.name] = row.id;
        return acc;
    }, {});
    console.log('‚úÖ Specialties seeded.');

    // 3. Seed Users (including doctors)
    console.log('Seeding users...');
    const hashedPassword = await bcrypt.hash('123456', 10);
    const usersResult = await client.query(`
      INSERT INTO sgh_users (username, email, password, first_name, last_name, role)
      VALUES
      ('admin', 'admin@clinica.com', $1, 'Admin', 'User', 'admin'),
      ('jefe.pediatria', 'jefe.pediatria@clinica.com', $1, 'Roberto', 'Gomez', 'jefe'),
      ('ana.gomez', 'ana.gomez@clinica.com', $1, 'Ana', 'Gomez', 'doctor'),
      ('carlos.diaz', 'carlos.diaz@clinica.com', $1, 'Carlos', 'Diaz', 'doctor'),
      ('lucia.fernandez', 'lucia.fernandez@clinica.com', $1, 'Lucia', 'Fernandez', 'doctor')
      RETURNING id, username;
    `, [hashedPassword]);
    const users: { [key: string]: number } = usersResult.rows.reduce((acc, row) => {
        acc[row.username] = row.id;
        return acc;
    }, {});
    console.log('‚úÖ Users seeded.');

    // 4. Seed Doctors
    console.log('Seeding doctors...');
    const doctorsResult = await client.query(`
      INSERT INTO sgh_doctors (user_id, section_id, name, email, license)
      VALUES
      ($1, $2, 'Ana Gomez', 'ana.gomez@clinica.com', 'DOC001'),
      ($3, $4, 'Carlos Diaz', 'carlos.diaz@clinica.com', 'DOC002'),
      ($5, $6, 'Lucia Fernandez', 'lucia.fernandez@clinica.com', 'DOC003')
      RETURNING id, name;
    `, [users['ana.gomez'], sections['Pediatr√≠a'], users['carlos.diaz'], sections['Cardiolog√≠a'], users['lucia.fernandez'], sections['Ginecolog√≠a y Obstetricia']]);
    const doctors: { [key: string]: number } = doctorsResult.rows.reduce((acc, row) => {
        acc[row.name] = row.id;
        return acc;
    }, {});
    console.log('‚úÖ Doctors seeded.');

    // 5. Seed Doctor-Specialty relationships
    console.log('Seeding doctor-specialty links...');
    await client.query(`
      INSERT INTO sgh_doctor_specialties (doctor_id, specialty_id) VALUES
      ($1, $2),
      ($1, $3),
      ($4, $5)
    `, [doctors['Ana Gomez'], specialties['Neumolog√≠a Pedi√°trica'], specialties['Cardiolog√≠a Pedi√°trica'], doctors['Lucia Fernandez'], specialties['Ginecolog√≠a Oncol√≥gica']]);
    console.log('‚úÖ Doctor-Specialty links seeded.');

    // 6. Assign section chiefs
    console.log('Assigning section chiefs...');
    await client.query(
      `INSERT INTO sgh_user_sections (user_id, section_id, role)
       VALUES ($1, $2, 'jefe')
       ON CONFLICT (user_id, section_id) DO NOTHING`,
      [users['jefe.pediatria'], sections['Pediatr√≠a']]
    );
    console.log('‚úÖ Section chiefs assigned.');

    console.log('üå± Database seeding complete.');
  } catch (error) {
    console.error('‚ùå Error seeding database:', error);
    throw error;
  } finally {
    client.release();
  }
};
